#ifndef tp_utils_Garbage_h
#define tp_utils_Garbage_h

#include "tp_utils/Globals.h" // IWYU pragma: keep

#include <functional>

namespace tp_utils
{

//##################################################################################################
class Garbage
{
  TP_DQ;
public:
  //################################################################################################
  Garbage();

  //################################################################################################
  ~Garbage();

  //################################################################################################
  void garbage(const std::function<void()>& closure);

  //################################################################################################
  void increaseThreads(size_t nThreads);
};

//##################################################################################################
void garbage(const std::function<void()>& closure);

}




#endif
